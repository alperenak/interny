import React, {Component} from 'react';
import PropTypes from 'prop-types';

/*** Utils ***/
import store from "../../../../store";
import {getCookie} from "../../../../utils/cookie";

/*** Styles ***/
import styles from './profileCard.scss';

/*** Icons ***/
import locationIcon from "../../../../icons/location.svg";
import addIcon from "../../../../icons/add-circular-outlined-white-button.svg";

class Profile extends Component {
    onFileUpload = async (files) => {
        let uploadData = await store.uploadImageType(files[0].type);
        let res = await store.uploadImage(uploadData.url, files[0]);
        if (res) {
            await store.uploadImageKey(uploadData.key);
        }
        await this.props.getUser();
    };

    render() {
        let {profileObject} = this.props;
        let userType = getCookie('user');
        return (
            <div className={"profileCard"}>
                <div className={"profileImage"}>
                    <div v-if={profileObject.avatar} className={"imageContainer"}>
                        <img src={profileObject.avatar} alt={'profile photo'}/>
                    </div>
                    <label v-if={userType === 'intern'}  className={profileObject.avatar ? "statusCircle" : "fileInput"} htmlFor="fileInput">
                        <img src={addIcon} alt={'icon'} />
                    </label>
                    <input
                        id={'fileInput'}
                        hidden={true}
                        accept="image/*"
                        type={'file'}
                        onChange={(e) => this.onFileUpload(e.target.files)}
                    />
                    {/*<div className={`${styles.statusCircle} ${styles[profileObject.status]}`} />*/}
                </div>
                <div className={"profileHeader"}>
                    <div className={"headerText"}>
                        {profileObject.header}
                    </div>
                    <div className={"location"}>
                        <img src={locationIcon} alt={'location'}/>
                        {profileObject.location}
                    </div>
                </div>

                <div className={"profileProperties"}>
                    <div className={"propertyContainer"}>
                        <div className={"property"}>{profileObject.sector}</div>
                        <div className={"propertyTitle"}>Sector</div>
                    </div>
                    <div className={"stroke"}/>
                    <div className={"propertyContainer"}>
                        <div className={"property"}>{profileObject.position}</div>
                        <div className={"propertyTitle"}>Job Type</div>
                    </div>
                    <div className={"stroke"}/>
                    <div className={"propertyContainer"}>
                        <div className={"property"}>{profileObject.education}</div>
                        <div className={"propertyTitle"}>Education</div>
                    </div>
                </div>

            </div>
        );
    }
}

export default Profile;

Profile.propTypes = {
  profileObject: PropTypes.object.isRequired
};

Profile.defaultProps = {
  profileObject: {}
};




.profileCard {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;

  & .profileImage {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 104px;
    height: 104px;
    border-radius: 32px;
    border: 1px solid #eee;
    -webkit-box-shadow: 0px 18px 18px 0px rgba(#2c3f58,0.1);
    -moz-box-shadow: 0px 18px 18px 0px rgba(#2c3f58,0.1);
    box-shadow: 0px 18px 18px 0px rgba(#2c3f58,0.1);
    margin-bottom: 20px;

    & .fileInput {
      cursor: pointer;
      width: 100%;
      background-color: #64646445;
      border-radius: 32px;
      padding: 10px 10px 5px 10px;
      & img {
        width: 100%;
      }
    }

    & .statusCircle {
      position: absolute;
      cursor: pointer;
	  display: flex;
      top: -5px;
      right: -5px;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      border: 2px solid #fff;
      background-color: #646464;
      & img {
        width: 100%;
      }
    }

    & .imageContainer {
      overflow: hidden;
      width: 104px;
      height: 104px;
      border-radius: 32px;
      & img {
        width: 100%;
      }
    }

  }

  & .profileHeader {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: 24px;
    & .headerText {
      font-family: "Sofia Pro Bold";
      font-size: calc(2px + 24px);
      font-weight: normal;
      font-stretch: normal;
      font-style: normal;
      letter-spacing: -0.17px;
      color: #2c3f58;
      margin-bottom: 6px;
    }

    & .location {
      display: flex;
      font-size: calc(2px + 13px);
      font-weight: lighter;
      font-stretch: normal;
      font-style: normal;
      letter-spacing: -0.24px;
      color: #949494;

      & img {
        height: 18px;
        width: 11px;
        margin-right: 4px;
      }
    }
  }

  & .profileProperties {
    display: flex;
    position: relative;
    justify-content: space-between;

    & .stroke {
      width: 2px;
      background-color: #efefef;
      align-self: center;
      height: 36px;
    }

    & .propertyContainer {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      padding: 16px;

      & .property {
        font-family: "Sofia Pro";
        font-size: calc(2px + 15px);
        font-weight: lighter;
        font-stretch: normal;
        font-style: normal;
        letter-spacing: -0.24px;
        color: #000;
        margin-bottom: 4px;
      }

      & .propertyTitle {
        font-size: calc(2px + 11px);
        font-weight: lighter;
        font-stretch: normal;
        font-style: normal;
        letter-spacing: -0.24px;
        color: #949494;
      }
    }
  }
}
